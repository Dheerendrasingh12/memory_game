{"ast":null,"code":"var _jsxFileName = \"/Users/sonu/Documents/Project/ReactJS/memory_game/src/component/GameBoard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Data from \"./Data\";\nimport Card from \"./Card\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard() {\n  _s();\n  const [cardsArray, setCardsArray] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [firstCard, setFirstCard] = useState(null);\n  const [secondCard, setSecondCard] = useState(null);\n  const [won, setWon] = useState(0);\n  const [stopFlip, setStopFlip] = useState(false);\n  function NewGame() {\n    setTimeout(() => {\n      const randomOrderArray = Data.sort(() => 0.5 - Math.random());\n      setCardsArray(randomOrderArray);\n      setMoves(0);\n      setFirstCard(null);\n      setSecondCard(null);\n      setWon(0);\n    }, 1200);\n  }\n  function handleSelectedCards(item) {\n    console.log(typeof item);\n    if (firstCard !== null && firstCard.id !== item.id) {\n      setSecondCard(item);\n    } else {\n      setFirstCard(item);\n    }\n  }\n  useEffect(() => {\n    if (firstCard && secondCard) {\n      setStopFlip(true);\n      if (firstCard.name === secondCard.name) {\n        setCardsArray(preArray => {\n          return preArray.map(unit => {\n            if (unit.name === firstCard.name) {\n              return {\n                ...unit,\n                matched: true\n              };\n            } else {\n              return unit;\n            }\n          });\n        });\n        setWon(preVal => preVal + 1);\n        removeSelection();\n      } else {\n        setTimeout(() => {\n          removeSelection();\n        }, 1000);\n      }\n    }\n  }, [firstCard, secondCard]);\n  function removeSelection() {\n    setFirstCard(null);\n    setSecondCard(null);\n    setStopFlip(false);\n    setMoves(preValue => preValue + 1);\n  }\n  useEffect(() => {\n    NewGame();\n  }, []);\n  const closeModalFunction = () => {\n    NewGame();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ansh Memory Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: cardsArray.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        handleSelectedCards: handleSelectedCards,\n        toggled: item === firstCard || item === secondCard || item.matched === true,\n        stopFlip: stopFlip\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), won !== 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [\"Moves:\", moves, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Modal, {\n        message: `Congratulations! You won in ${moves} moves!`,\n        onClose: NewGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: NewGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"GUTkwMZTVNiCgekp+6bnl9fn7Mg=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["useEffect","useState","Data","Card","Modal","jsxDEV","_jsxDEV","GameBoard","_s","cardsArray","setCardsArray","moves","setMoves","firstCard","setFirstCard","secondCard","setSecondCard","won","setWon","stopFlip","setStopFlip","NewGame","setTimeout","randomOrderArray","sort","Math","random","handleSelectedCards","item","console","log","id","name","preArray","map","unit","matched","preVal","removeSelection","preValue","closeModalFunction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toggled","message","onClose","onClick","_c","$RefreshReg$"],"sources":["/Users/sonu/Documents/Project/ReactJS/memory_game/src/component/GameBoard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Data from \"./Data\";\nimport Card from \"./Card\";\nimport Modal from \"./Modal\";\n\nfunction GameBoard() {\n  const [cardsArray, setCardsArray] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [firstCard, setFirstCard] = useState(null);\n  const [secondCard, setSecondCard] = useState(null);\n  const [won, setWon] = useState(0);\n  const [stopFlip, setStopFlip] = useState(false);\n\n  function NewGame() {\n    setTimeout(() => {\n      const randomOrderArray = Data.sort(() => 0.5 - Math.random());\n      setCardsArray(randomOrderArray);\n      setMoves(0);\n      setFirstCard(null);\n      setSecondCard(null);\n      setWon(0);\n    }, 1200);\n  }\n\n  function handleSelectedCards(item) {\n    console.log(typeof item);\n    if (firstCard !== null && firstCard.id !== item.id) {\n      setSecondCard(item);\n    } else {\n      setFirstCard(item);\n    }\n  }\n\n  useEffect(() => {\n    if (firstCard && secondCard) {\n      setStopFlip(true);\n      if (firstCard.name === secondCard.name) {\n        setCardsArray((preArray) => {\n          return preArray.map((unit) => {\n            if (unit.name === firstCard.name) {\n              return { ...unit, matched: true };\n            } else {\n              return unit;\n            }\n          });\n        });\n        setWon((preVal) => preVal + 1);\n        removeSelection();\n      } else {\n        setTimeout(() => {\n          removeSelection();\n        }, 1000);\n      }\n    }\n  }, [firstCard, secondCard]);\n\n  function removeSelection() {\n    setFirstCard(null);\n    setSecondCard(null);\n    setStopFlip(false);\n    setMoves((preValue) => preValue + 1);\n  }\n\n  useEffect(() => {\n    NewGame();\n  }, []);\n  const closeModalFunction = () => {\n    NewGame();\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>Ansh Memory Game</h1>\n      </div>\n      <div className=\"board\">\n        {cardsArray.map((item) => (\n          <Card\n            item={item}\n            key={item.id}\n            handleSelectedCards={handleSelectedCards}\n            toggled={\n              item === firstCard || item === secondCard || item.matched === true\n            }\n            stopFlip={stopFlip}\n          />\n        ))}\n      </div>\n      {won !== 6 ? (\n        <div className=\"comments\">Moves:{moves} </div>\n      ) : (\n        <div className=\"comments\">\n          {\" \"}\n          <Modal\n            message={`Congratulations! You won in ${moves} moves!`}\n            onClose={NewGame}\n          ></Modal>{\" \"}\n        </div>\n      )}\n      <button className=\"button\" onClick={NewGame}>\n        New Game\n      </button>\n    </div>\n  );\n}\n\nexport default GameBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}