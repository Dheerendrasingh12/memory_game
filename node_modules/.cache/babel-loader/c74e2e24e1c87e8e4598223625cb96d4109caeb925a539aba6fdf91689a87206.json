{"ast":null,"code":"var _jsxFileName = \"/Users/sonu/Documents/Project/ReactJS/memory_game/src/component/GameBoard.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard() {\n  _s();\n  const [cardsArray, setCardsArray] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [firstCard, setFirstCard] = useState(null);\n  const [secondCard, setSecondCard] = useState(null);\n  const [won, setWon] = useState(0);\n  const [stopFlip, setStopFlip] = useState(false);\n  function handleSelectedCards(item) {\n    console.log(typeof item);\n    if (firstCard !== null && firstCard.id !== item.id) {\n      setSecondCard(item);\n    } else {\n      setFirstCard(item);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ansh Memory Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: cardsArray.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        handleSelectedCards: handleSelectedCards,\n        toggled: item === firstCard || item === secondCard || item.matched === true,\n        stopFlip: stopFlip\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"27Z0mbHqRqEBCYPFEXmdFIVntvY=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","GameBoard","_s","cardsArray","setCardsArray","moves","setMoves","firstCard","setFirstCard","secondCard","setSecondCard","won","setWon","stopFlip","setStopFlip","handleSelectedCards","item","console","log","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","toggled","matched","_c","$RefreshReg$"],"sources":["/Users/sonu/Documents/Project/ReactJS/memory_game/src/component/GameBoard.js"],"sourcesContent":["import { useState } from \"react\";\nimport Card from \"./Card\";\n\nfunction GameBoard() {\n  const [cardsArray, setCardsArray] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [firstCard, setFirstCard] = useState(null);\n  const [secondCard, setSecondCard] = useState(null);\n  const [won, setWon] = useState(0);\n  const [stopFlip, setStopFlip] = useState(false);\n\n  function handleSelectedCards(item) {\n    console.log(typeof item);\n    if (firstCard !== null && firstCard.id !== item.id) {\n      setSecondCard(item);\n    } else {\n      setFirstCard(item);\n    }\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>Ansh Memory Game</h1>\n      </div>\n      <div className=\"board\">\n        {cardsArray.map((item) => (\n          <Card\n            item={item}\n            key={item.id}\n            handleSelectedCards={handleSelectedCards}\n            toggled={\n              item === firstCard || item === secondCard || item.matched === true\n            }\n            stopFlip={stopFlip}\n          />\n        ))}\n      </div>\n\n      <button className=\"button\">New Game</button>\n    </div>\n  );\n}\n\nexport default GameBoard;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAASkB,mBAAmBA,CAACC,IAAI,EAAE;IACjCC,OAAO,CAACC,GAAG,CAAC,OAAOF,IAAI,CAAC;IACxB,IAAIT,SAAS,KAAK,IAAI,IAAIA,SAAS,CAACY,EAAE,KAAKH,IAAI,CAACG,EAAE,EAAE;MAClDT,aAAa,CAACM,IAAI,CAAC;IACrB,CAAC,MAAM;MACLR,YAAY,CAACQ,IAAI,CAAC;IACpB;EACF;EACA,oBACEhB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrB,OAAA;MAAKoB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBrB,OAAA;QAAAqB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACNzB,OAAA;MAAKoB,SAAS,EAAC,OAAO;MAAAC,QAAA,EACnBlB,UAAU,CAACuB,GAAG,CAAEV,IAAI,iBACnBhB,OAAA,CAACF,IAAI;QACHkB,IAAI,EAAEA,IAAK;QAEXD,mBAAmB,EAAEA,mBAAoB;QACzCY,OAAO,EACLX,IAAI,KAAKT,SAAS,IAAIS,IAAI,KAAKP,UAAU,IAAIO,IAAI,CAACY,OAAO,KAAK,IAC/D;QACDf,QAAQ,EAAEA;MAAS,GALdG,IAAI,CAACG,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENzB,OAAA;MAAQoB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACvB,EAAA,CAtCQD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAwClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}